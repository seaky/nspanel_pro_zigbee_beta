import { ClassicConfig } from '@typescript-eslint/utils/ts-eslint'
import { FlatConfig } from '@typescript-eslint/utils/ts-eslint'
import { ObjectExpression } from 'node_modules/@typescript-eslint/types/dist/generated/ast-spec'
import { ObjectPattern } from 'node_modules/@typescript-eslint/types/dist/generated/ast-spec'
import { RuleListener } from '@typescript-eslint/utils/ts-eslint'
import { RuleModule } from '@typescript-eslint/utils/ts-eslint'

declare const _default: {
  configs: {
    'recommended-alphabetical-legacy': ClassicConfig.Config
    'recommended-line-length-legacy': ClassicConfig.Config
    'recommended-natural-legacy': ClassicConfig.Config
    'recommended-alphabetical': FlatConfig.Config
    'recommended-line-length': FlatConfig.Config
    'recommended-natural': FlatConfig.Config
  }
  rules: {
    'sort-variable-declarations': RuleModule<
      'unexpectedVariableDeclarationsOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-intersection-types': RuleModule<
      'unexpectedIntersectionTypesOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (
            | (
                | 'object'
                | 'function'
                | 'operator'
                | 'unknown'
                | 'intersection'
                | 'conditional'
                | 'keyword'
                | 'literal'
                | 'nullish'
                | 'import'
                | 'named'
                | 'tuple'
                | 'union'
              )[]
            | (
                | 'object'
                | 'function'
                | 'operator'
                | 'unknown'
                | 'intersection'
                | 'conditional'
                | 'keyword'
                | 'literal'
                | 'nullish'
                | 'import'
                | 'named'
                | 'tuple'
                | 'union'
              )
          )[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-svelte-attributes': RuleModule<
      'unexpectedSvelteAttributesOrder',
      [
        Partial<{
          customGroups: {
            [x: string]: string | string[]
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-astro-attributes': RuleModule<
      'unexpectedAstroAttributesOrder',
      [
        Partial<{
          customGroups: {
            [x: string]: string | string[]
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-vue-attributes': RuleModule<
      'unexpectedVueAttributesOrder',
      [
        Partial<{
          customGroups: {
            [x: string]: string | string[]
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-array-includes': RuleModule<
      'unexpectedArrayIncludesOrder',
      [
        Partial<{
          groupKind: 'literals-first' | 'spreads-first' | 'mixed'
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-named-imports': RuleModule<
      'unexpectedNamedImportsOrder',
      [
        Partial<{
          groupKind: 'values-first' | 'types-first' | 'mixed'
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreAlias: boolean
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-named-exports': RuleModule<
      'unexpectedNamedExportsOrder',
      [
        Partial<{
          groupKind: 'values-first' | 'types-first' | 'mixed'
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-object-types': RuleModule<
      'unexpectedObjectTypesOrder',
      [
        Partial<{
          groupKind: 'required-first' | 'optional-first' | 'mixed'
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          partitionByNewLine: boolean
          order: 'desc' | 'asc'
          ignoreCase: boolean
          customGroups: {}
        }>,
      ],
      RuleListener
    >
    'sort-union-types': RuleModule<
      'unexpectedUnionTypesOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (
            | (
                | 'object'
                | 'function'
                | 'operator'
                | 'unknown'
                | 'intersection'
                | 'conditional'
                | 'keyword'
                | 'literal'
                | 'nullish'
                | 'import'
                | 'named'
                | 'tuple'
                | 'union'
              )[]
            | (
                | 'object'
                | 'function'
                | 'operator'
                | 'unknown'
                | 'intersection'
                | 'conditional'
                | 'keyword'
                | 'literal'
                | 'nullish'
                | 'import'
                | 'named'
                | 'tuple'
                | 'union'
              )
          )[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-switch-case': RuleModule<
      'unexpectedSwitchCaseOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-interfaces': RuleModule<
      'unexpectedInterfacePropertiesOrder',
      [
        Partial<{
          groupKind: 'optional-first' | 'required-first' | 'mixed'
          customGroups: {
            [key: string]: string[] | string
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          partitionByNewLine: boolean
          ignorePattern: string[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-jsx-props': RuleModule<
      'unexpectedJSXPropsOrder',
      [
        Partial<{
          customGroups: {
            [x: string]: string | string[]
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          groups: (string | string[])[]
          ignorePattern: string[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-classes': RuleModule<
      'unexpectedClassesOrder',
      [
        Partial<{
          customGroups: {
            [key: string]: string[] | string
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          partitionByComment: string[] | boolean | string
          groups: (string[] | string)[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-imports': RuleModule<
      | 'missedSpacingBetweenImports'
      | 'extraSpacingBetweenImports'
      | 'unexpectedImportsOrder',
      [
        Partial<{
          customGroups: {
            value?:
              | {
                  [x: string]: string | string[]
                }
              | undefined
            type?:
              | {
                  [x: string]: string | string[]
                }
              | undefined
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          newlinesBetween: 'ignore' | 'always' | 'never'
          groups: (string | string[])[]
          environment: 'node' | 'bun'
          internalPattern: string[]
          maxLineLength?: number
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-exports': RuleModule<
      'unexpectedExportsOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-objects': RuleModule<
      'unexpectedObjectsOrder',
      [
        Partial<{
          customIgnore: ((
            object: ObjectExpression | ObjectPattern,
            filename: string,
          ) => boolean)[]
          customGroups: {
            [key: string]: string[] | string
          }
          type: 'alphabetical' | 'line-length' | 'natural'
          partitionByComment: string[] | boolean | string
          groups: (string[] | string)[]
          partitionByNewLine: boolean
          styledComponents: boolean
          ignorePattern: string[]
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-enums': RuleModule<
      'unexpectedEnumsOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          partitionByComment: string[] | boolean | string
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
    'sort-maps': RuleModule<
      'unexpectedMapElementsOrder',
      [
        Partial<{
          type: 'alphabetical' | 'line-length' | 'natural'
          order: 'desc' | 'asc'
          ignoreCase: boolean
        }>,
      ],
      RuleListener
    >
  }
  name: string
}
export default _default

export {}
